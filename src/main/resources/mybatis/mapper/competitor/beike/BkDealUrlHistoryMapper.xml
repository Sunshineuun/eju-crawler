<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiusm.eju.crawler.competitor.beike.dao.BkDealUrlHistoryMapper">
  <resultMap id="BaseResultMap" type="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CLASS_HANDLER" jdbcType="VARCHAR" property="classHandler" />
    <result column="URL_BASE64" jdbcType="VARCHAR" property="urlBase64" />
    <result column="IS_SUCCESS" jdbcType="INTEGER" property="isSuccess" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    <result column="result" jdbcType="LONGVARCHAR" property="result" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, url, create_time, CLASS_HANDLER, URL_BASE64, IS_SUCCESS
  </sql>
  <sql id="Blob_Column_List">
    result
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bk_deal_url_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bk_deal_url_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bk_deal_url_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bk_deal_url_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistoryExample">
    delete from bk_deal_url_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bk_deal_url_history (url, create_time, CLASS_HANDLER, 
      URL_BASE64, IS_SUCCESS, result
      )
    values (#{url,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{classHandler,jdbcType=VARCHAR}, 
      #{urlBase64,jdbcType=VARCHAR}, #{isSuccess,jdbcType=INTEGER}, #{result,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bk_deal_url_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="classHandler != null">
        CLASS_HANDLER,
      </if>
      <if test="urlBase64 != null">
        URL_BASE64,
      </if>
      <if test="isSuccess != null">
        IS_SUCCESS,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classHandler != null">
        #{classHandler,jdbcType=VARCHAR},
      </if>
      <if test="urlBase64 != null">
        #{urlBase64,jdbcType=VARCHAR},
      </if>
      <if test="isSuccess != null">
        #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistoryExample" resultType="java.lang.Long">
    select count(*) from bk_deal_url_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bk_deal_url_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classHandler != null">
        CLASS_HANDLER = #{record.classHandler,jdbcType=VARCHAR},
      </if>
      <if test="record.urlBase64 != null">
        URL_BASE64 = #{record.urlBase64,jdbcType=VARCHAR},
      </if>
      <if test="record.isSuccess != null">
        IS_SUCCESS = #{record.isSuccess,jdbcType=INTEGER},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bk_deal_url_history
    set id = #{record.id,jdbcType=BIGINT},
      url = #{record.url,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      CLASS_HANDLER = #{record.classHandler,jdbcType=VARCHAR},
      URL_BASE64 = #{record.urlBase64,jdbcType=VARCHAR},
      IS_SUCCESS = #{record.isSuccess,jdbcType=INTEGER},
      result = #{record.result,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bk_deal_url_history
    set id = #{record.id,jdbcType=BIGINT},
      url = #{record.url,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      CLASS_HANDLER = #{record.classHandler,jdbcType=VARCHAR},
      URL_BASE64 = #{record.urlBase64,jdbcType=VARCHAR},
      IS_SUCCESS = #{record.isSuccess,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    update bk_deal_url_history
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classHandler != null">
        CLASS_HANDLER = #{classHandler,jdbcType=VARCHAR},
      </if>
      <if test="urlBase64 != null">
        URL_BASE64 = #{urlBase64,jdbcType=VARCHAR},
      </if>
      <if test="isSuccess != null">
        IS_SUCCESS = #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    update bk_deal_url_history
    set url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      CLASS_HANDLER = #{classHandler,jdbcType=VARCHAR},
      URL_BASE64 = #{urlBase64,jdbcType=VARCHAR},
      IS_SUCCESS = #{isSuccess,jdbcType=INTEGER},
      result = #{result,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkDealUrlHistory">
    update bk_deal_url_history
    set url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      CLASS_HANDLER = #{classHandler,jdbcType=VARCHAR},
      URL_BASE64 = #{urlBase64,jdbcType=VARCHAR},
      IS_SUCCESS = #{isSuccess,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>