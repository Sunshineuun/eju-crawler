<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiusm.eju.crawler.competitor.beike.dao.BkFenceMapper">
  <resultMap id="BaseResultMap" type="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="city_code" jdbcType="CHAR" property="cityCode" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="bizcircle" jdbcType="VARCHAR" property="bizcircle" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="version" jdbcType="VARCHAR" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    <result column="fence" jdbcType="LONGVARCHAR" property="fence" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, city_code, city_name, district, bizcircle, longitude, latitude, type, version
  </sql>
  <sql id="Blob_Column_List">
    fence
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFenceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bk_fence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFenceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bk_fence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bk_fence
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bk_fence
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFenceExample">
    delete from bk_fence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bk_fence (city_code, city_name, district, 
      bizcircle, longitude, latitude, 
      type, version, fence
      )
    values (#{cityCode,jdbcType=CHAR}, #{cityName,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{bizcircle,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{fence,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bk_fence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="bizcircle != null">
        bizcircle,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="fence != null">
        fence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityCode != null">
        #{cityCode,jdbcType=CHAR},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="bizcircle != null">
        #{bizcircle,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="fence != null">
        #{fence,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFenceExample" resultType="java.lang.Long">
    select count(*) from bk_fence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bk_fence
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=CHAR},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.bizcircle != null">
        bizcircle = #{record.bizcircle,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.fence != null">
        fence = #{record.fence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bk_fence
    set id = #{record.id,jdbcType=BIGINT},
      city_code = #{record.cityCode,jdbcType=CHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      bizcircle = #{record.bizcircle,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      fence = #{record.fence,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bk_fence
    set id = #{record.id,jdbcType=BIGINT},
      city_code = #{record.cityCode,jdbcType=CHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      bizcircle = #{record.bizcircle,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    update bk_fence
    <set>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=CHAR},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="bizcircle != null">
        bizcircle = #{bizcircle,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="fence != null">
        fence = #{fence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    update bk_fence
    set city_code = #{cityCode,jdbcType=CHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      bizcircle = #{bizcircle,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      fence = #{fence,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiusm.eju.crawler.competitor.beike.entity.BkFence">
    update bk_fence
    set city_code = #{cityCode,jdbcType=CHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      bizcircle = #{bizcircle,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>