<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiusm.eju.crawler.task.dao.CrawlerTaskInstanceMapper">
  <resultMap id="BaseResultMap" type="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="task_param_json" jdbcType="VARCHAR" property="taskParamJson" />
    <result column="handler_type" jdbcType="VARCHAR" property="handlerType" />
    <result column="handle_request_num" jdbcType="BIGINT" property="handleRequestNum" />
    <result column="handle_request_failure_num" jdbcType="BIGINT" property="handleRequestFailureNum" />
    <result column="handle_request_success_num" jdbcType="BIGINT" property="handleRequestSuccessNum" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, task_id, task_name, task_param_json, handler_type, handle_request_num, handle_request_failure_num, 
    handle_request_success_num, state, create_time
  </sql>
  <select id="selectByExample" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from crawler_task_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crawler_task_instance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from crawler_task_instance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstanceExample">
    delete from crawler_task_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into crawler_task_instance (task_id, task_name, task_param_json, 
      handler_type, handle_request_num, handle_request_failure_num, 
      handle_request_success_num, state, create_time
      )
    values (#{taskId,jdbcType=BIGINT}, #{taskName,jdbcType=VARCHAR}, #{taskParamJson,jdbcType=VARCHAR}, 
      #{handlerType,jdbcType=VARCHAR}, #{handleRequestNum,jdbcType=BIGINT}, #{handleRequestFailureNum,jdbcType=BIGINT}, 
      #{handleRequestSuccessNum,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into crawler_task_instance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskParamJson != null">
        task_param_json,
      </if>
      <if test="handlerType != null">
        handler_type,
      </if>
      <if test="handleRequestNum != null">
        handle_request_num,
      </if>
      <if test="handleRequestFailureNum != null">
        handle_request_failure_num,
      </if>
      <if test="handleRequestSuccessNum != null">
        handle_request_success_num,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskParamJson != null">
        #{taskParamJson,jdbcType=VARCHAR},
      </if>
      <if test="handlerType != null">
        #{handlerType,jdbcType=VARCHAR},
      </if>
      <if test="handleRequestNum != null">
        #{handleRequestNum,jdbcType=BIGINT},
      </if>
      <if test="handleRequestFailureNum != null">
        #{handleRequestFailureNum,jdbcType=BIGINT},
      </if>
      <if test="handleRequestSuccessNum != null">
        #{handleRequestSuccessNum,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstanceExample" resultType="java.lang.Long">
    select count(*) from crawler_task_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crawler_task_instance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskParamJson != null">
        task_param_json = #{record.taskParamJson,jdbcType=VARCHAR},
      </if>
      <if test="record.handlerType != null">
        handler_type = #{record.handlerType,jdbcType=VARCHAR},
      </if>
      <if test="record.handleRequestNum != null">
        handle_request_num = #{record.handleRequestNum,jdbcType=BIGINT},
      </if>
      <if test="record.handleRequestFailureNum != null">
        handle_request_failure_num = #{record.handleRequestFailureNum,jdbcType=BIGINT},
      </if>
      <if test="record.handleRequestSuccessNum != null">
        handle_request_success_num = #{record.handleRequestSuccessNum,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crawler_task_instance
    set id = #{record.id,jdbcType=BIGINT},
      task_id = #{record.taskId,jdbcType=BIGINT},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      task_param_json = #{record.taskParamJson,jdbcType=VARCHAR},
      handler_type = #{record.handlerType,jdbcType=VARCHAR},
      handle_request_num = #{record.handleRequestNum,jdbcType=BIGINT},
      handle_request_failure_num = #{record.handleRequestFailureNum,jdbcType=BIGINT},
      handle_request_success_num = #{record.handleRequestSuccessNum,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstance">
    update crawler_task_instance
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskParamJson != null">
        task_param_json = #{taskParamJson,jdbcType=VARCHAR},
      </if>
      <if test="handlerType != null">
        handler_type = #{handlerType,jdbcType=VARCHAR},
      </if>
      <if test="handleRequestNum != null">
        handle_request_num = #{handleRequestNum,jdbcType=BIGINT},
      </if>
      <if test="handleRequestFailureNum != null">
        handle_request_failure_num = #{handleRequestFailureNum,jdbcType=BIGINT},
      </if>
      <if test="handleRequestSuccessNum != null">
        handle_request_success_num = #{handleRequestSuccessNum,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiusm.eju.crawler.task.entity.CrawlerTaskInstance">
    update crawler_task_instance
    set task_id = #{taskId,jdbcType=BIGINT},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_param_json = #{taskParamJson,jdbcType=VARCHAR},
      handler_type = #{handlerType,jdbcType=VARCHAR},
      handle_request_num = #{handleRequestNum,jdbcType=BIGINT},
      handle_request_failure_num = #{handleRequestFailureNum,jdbcType=BIGINT},
      handle_request_success_num = #{handleRequestSuccessNum,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>