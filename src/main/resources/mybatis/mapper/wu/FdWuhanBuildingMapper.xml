<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiusm.eju.crawler.government.wh.dao.FdWuhanBuildingMapper">
    <resultMap id="BaseResultMap" type="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuilding">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="house_id" jdbcType="BIGINT" property="houseId"/>
        <result column="city_name" jdbcType="VARCHAR" property="cityName"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName"/>
        <result column="building_id" jdbcType="VARCHAR" property="buildingId"/>
        <result column="building_name" jdbcType="VARCHAR" property="buildingName"/>
        <result column="building_total_layer_num" jdbcType="VARCHAR" property="buildingTotalLayerNum"/>
        <result column="building_house_num" jdbcType="VARCHAR" property="buildingHouseNum"/>
        <result column="building_area" jdbcType="VARCHAR" property="buildingArea"/>
        <result column="surveying_mapping_agencies" jdbcType="VARCHAR" property="surveyingMappingAgencies"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , house_id, city_name, project_id, project_name, building_id, building_name, building_total_layer_num,
    building_house_num, building_area, surveying_mapping_agencies, url, status, version, 
    create_time
    </sql>
    <select id="selectByExample" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuildingExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from fd_wuhan_building
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fd_wuhan_building
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from fd_wuhan_building
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuildingExample">
        delete from fd_wuhan_building
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuilding">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into fd_wuhan_building (house_id, city_name, project_id,
        project_name, building_id, building_name,
        building_total_layer_num, building_house_num,
        building_area, surveying_mapping_agencies,
        url, status, version,
        create_time)
        values (#{houseId,jdbcType=BIGINT}, #{cityName,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR},
        #{projectName,jdbcType=VARCHAR}, #{buildingId,jdbcType=VARCHAR}, #{buildingName,jdbcType=VARCHAR},
        #{buildingTotalLayerNum,jdbcType=VARCHAR}, #{buildingHouseNum,jdbcType=VARCHAR},
        #{buildingArea,jdbcType=VARCHAR}, #{surveyingMappingAgencies,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuilding">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into fd_wuhan_building
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="houseId != null">
                house_id,
            </if>
            <if test="cityName != null">
                city_name,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="projectName != null">
                project_name,
            </if>
            <if test="buildingId != null">
                building_id,
            </if>
            <if test="buildingName != null">
                building_name,
            </if>
            <if test="buildingTotalLayerNum != null">
                building_total_layer_num,
            </if>
            <if test="buildingHouseNum != null">
                building_house_num,
            </if>
            <if test="buildingArea != null">
                building_area,
            </if>
            <if test="surveyingMappingAgencies != null">
                surveying_mapping_agencies,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="houseId != null">
                #{houseId,jdbcType=BIGINT},
            </if>
            <if test="cityName != null">
                #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="buildingId != null">
                #{buildingId,jdbcType=VARCHAR},
            </if>
            <if test="buildingName != null">
                #{buildingName,jdbcType=VARCHAR},
            </if>
            <if test="buildingTotalLayerNum != null">
                #{buildingTotalLayerNum,jdbcType=VARCHAR},
            </if>
            <if test="buildingHouseNum != null">
                #{buildingHouseNum,jdbcType=VARCHAR},
            </if>
            <if test="buildingArea != null">
                #{buildingArea,jdbcType=VARCHAR},
            </if>
            <if test="surveyingMappingAgencies != null">
                #{surveyingMappingAgencies,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuildingExample" resultType="java.lang.Long">
        select count(*) from fd_wuhan_building
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update fd_wuhan_building
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=BIGINT},
            </if>
            <if test="record.cityName != null">
                city_name = #{record.cityName,jdbcType=VARCHAR},
            </if>
            <if test="record.projectId != null">
                project_id = #{record.projectId,jdbcType=VARCHAR},
            </if>
            <if test="record.projectName != null">
                project_name = #{record.projectName,jdbcType=VARCHAR},
            </if>
            <if test="record.buildingId != null">
                building_id = #{record.buildingId,jdbcType=VARCHAR},
            </if>
            <if test="record.buildingName != null">
                building_name = #{record.buildingName,jdbcType=VARCHAR},
            </if>
            <if test="record.buildingTotalLayerNum != null">
                building_total_layer_num = #{record.buildingTotalLayerNum,jdbcType=VARCHAR},
            </if>
            <if test="record.buildingHouseNum != null">
                building_house_num = #{record.buildingHouseNum,jdbcType=VARCHAR},
            </if>
            <if test="record.buildingArea != null">
                building_area = #{record.buildingArea,jdbcType=VARCHAR},
            </if>
            <if test="record.surveyingMappingAgencies != null">
                surveying_mapping_agencies = #{record.surveyingMappingAgencies,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update fd_wuhan_building
        set id = #{record.id,jdbcType=BIGINT},
        house_id = #{record.houseId,jdbcType=BIGINT},
        city_name = #{record.cityName,jdbcType=VARCHAR},
        project_id = #{record.projectId,jdbcType=VARCHAR},
        project_name = #{record.projectName,jdbcType=VARCHAR},
        building_id = #{record.buildingId,jdbcType=VARCHAR},
        building_name = #{record.buildingName,jdbcType=VARCHAR},
        building_total_layer_num = #{record.buildingTotalLayerNum,jdbcType=VARCHAR},
        building_house_num = #{record.buildingHouseNum,jdbcType=VARCHAR},
        building_area = #{record.buildingArea,jdbcType=VARCHAR},
        surveying_mapping_agencies = #{record.surveyingMappingAgencies,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        version = #{record.version,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuilding">
        update fd_wuhan_building
        <set>
            <if test="houseId != null">
                house_id = #{houseId,jdbcType=BIGINT},
            </if>
            <if test="cityName != null">
                city_name = #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="buildingId != null">
                building_id = #{buildingId,jdbcType=VARCHAR},
            </if>
            <if test="buildingName != null">
                building_name = #{buildingName,jdbcType=VARCHAR},
            </if>
            <if test="buildingTotalLayerNum != null">
                building_total_layer_num = #{buildingTotalLayerNum,jdbcType=VARCHAR},
            </if>
            <if test="buildingHouseNum != null">
                building_house_num = #{buildingHouseNum,jdbcType=VARCHAR},
            </if>
            <if test="buildingArea != null">
                building_area = #{buildingArea,jdbcType=VARCHAR},
            </if>
            <if test="surveyingMappingAgencies != null">
                surveying_mapping_agencies = #{surveyingMappingAgencies,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qiusm.eju.crawler.government.wh.entity.FdWuhanBuilding">
        update fd_wuhan_building
        set house_id                   = #{houseId,jdbcType=BIGINT},
            city_name                  = #{cityName,jdbcType=VARCHAR},
            project_id                 = #{projectId,jdbcType=VARCHAR},
            project_name               = #{projectName,jdbcType=VARCHAR},
            building_id                = #{buildingId,jdbcType=VARCHAR},
            building_name              = #{buildingName,jdbcType=VARCHAR},
            building_total_layer_num   = #{buildingTotalLayerNum,jdbcType=VARCHAR},
            building_house_num         = #{buildingHouseNum,jdbcType=VARCHAR},
            building_area              = #{buildingArea,jdbcType=VARCHAR},
            surveying_mapping_agencies = #{surveyingMappingAgencies,jdbcType=VARCHAR},
            url                        = #{url,jdbcType=VARCHAR},
            status                     = #{status,jdbcType=VARCHAR},
            version                    = #{version,jdbcType=VARCHAR},
            create_time                = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPendLoadHouseInfo" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from (
                 select building.*,
                        building.building_house_num &lt;= unit.unit_num state
                 from fd_wuhan_building building
                          left join (select count(1) unit_num, building_id
                                     from fd_wuhan_unit
                                     group by building_id) unit
                                    on unit.building_id = building.id
             ) a
        where (state = 0 or state is null) and id &gt; #{maxId,jdbcType=BIGINT}
        order by house_id limit 1000
    </select>
    <select id="selectByPendLoadHouseDetail" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from fd_wuhan_building building
        where id in (select fd_wuhan_unit.building_id
                     from fd_wuhan_unit
                     where details_url is not null
                       and house_address is null)
          and id &gt; #{maxId,jdbcType=BIGINT}
        order by id
            limit 1000
    </select>
</mapper>